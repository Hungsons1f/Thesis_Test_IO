<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="PostMqtt" Id="{8ae6097d-367d-412a-94f9-869abab8b27d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PostMqtt
VAR
	fbMqttClient : FB_IotMqttClient;
	bFirstScan : BOOL := TRUE;
	hrErrorOccurred : HRESULT; 
	fbJsonWriter: FB_JsonSaxWriter; 
	
	(* published message *)
	sTopicPub : STRING(255) := 'IPC/ProcessData';
	sPayloadPub : STRING(6000);
	fbTimer : TON;

//	(* received message *)
//	bSubscribed : BOOL;
//	sTopicSub : STRING(255) := 'EK9160/EK-537E06/Stream1/Json/Tx/Data';
//	{attribute 'TcEncoding':='UTF-8'}
//	sTopicRcv : STRING(255);
//	{attribute 'TcEncoding':='UTF-8'}
//	sPayloadSub : STRING(255);
//	fbMessageQueue : FB_IotMqttMessageQueue;
//	fbMessage : FB_IotMqttMessage;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bFirstScan THEN
	bFirstScan := FALSE;
	fbMqttClient.sHostName:= '127.0.0.1';
	fbMqttClient.nHostPort:= 8883;
	fbMqttClient.sClientId:= 'mqtt'; 
	fbMqttClient.sTopicPrefix:= ''; 
	fbMqttClient.stTLS.sCA:= 'C:\TwinCAT\3.1\Config\certs\rootCA.pem';
	fbMqttClient.stTLS.bNoServerCertCheck:= TRUE;
	//fbMqttClient.ipMessageQueue := fbMessageQueue;
END_IF

fbMqttClient.Execute(TRUE);
IF fbMqttClient.bError THEN
	hrErrorOccurred := fbMqttClient.hrErrorCode;
END_IF

IF fbMqttClient.bConnected AND GVL.bLocalGot THEN
//	//Subcribe
//	IF NOT bSubscribed THEN
//		bSubscribed := fbMqttClient.Subscribe(sTopic:=sTopicSub, eQoS:=TcIotMqttQos.AtMostOnceDelivery);
//		IF fbMqttClient.bError THEN
//			hrErrorOccurred := fbMqttClient.hrErrorCode;
//		END_IF
//	END_IF
	
	//Publish
	WriteJson();
	fbMqttClient.Publish(	sTopic:= sTopicPub, 
							pPayload:= ADR(sPayloadPub), nPayloadSize:= LEN2(ADR(sPayloadPub))+1, 
							eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );
	GVL.bLocalGot := FALSE;
	GVL.bRemotePosted := TRUE;

	IF fbMqttClient.bError THEN
		hrErrorOccurred := fbMqttClient.hrErrorCode;
		GVL.bLocalGot := TRUE;
		GVL.bRemotePosted := FALSE;
	END_IF
END_IF

////Get the subcribe message whenever available
//IF fbMessageQueue.nQueuedMessages > 0 THEN
//	IF fbMessageQueue.Dequeue(fbMessage:=fbMessage) THEN
//		fbMessage.GetTopic(pTopic:=ADR(sTopicRcv), nTopicSize:=SIZEOF(sTopicRcv) );
//		fbMessage.GetPayload(pPayload:=ADR(sPayloadSub), nPayloadSize:=SIZEOF(sPayloadSub), bSetNullTermination:=FALSE);
//	END_IF
//END_IF


//IF GVL.bLocalGot THEN
//	GVL.bLocalGot := FALSE;
//	GVL.bRemotePosted := TRUE;
//END_IF
]]></ST>
    </Implementation>
    <Action Name="WriteJson" Id="{c348af4f-714f-4c44-946a-6418946cbce8}">
      <Implementation>
        <ST><![CDATA[fbJsonWriter.StartObject();
fbJsonWriter.AddKey('Timestamp');
fbJsonWriter.AddDateTime(GVL.aReadStruct.Timestamp);

fbJsonWriter.AddKey('ProcessData');
	fbJsonWriter.StartObject();
	fbJsonWriter.AddKey('FurTemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.FurTemp);
	fbJsonWriter.AddKey('FurInper');
	fbJsonWriter.AddReal(GVL.aReadStruct.FurInper);
	fbJsonWriter.AddKey('LphTemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.LphTemp);
	fbJsonWriter.AddKey('LphPress');
	fbJsonWriter.AddReal(GVL.aReadStruct.LphPress);
	fbJsonWriter.AddKey('LphInpress');
	fbJsonWriter.AddReal(GVL.aReadStruct.LphInpress);
	fbJsonWriter.AddKey('LphInflow');
	fbJsonWriter.AddReal(GVL.aReadStruct.LphInflow);
	fbJsonWriter.AddKey('DeaTemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.DeaTemp);
	fbJsonWriter.AddKey('DeaPress');
	fbJsonWriter.AddReal(GVL.aReadStruct.DeaPress);
	fbJsonWriter.AddKey('HphTemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.HphTemp);
	fbJsonWriter.AddKey('HphPress');
	fbJsonWriter.AddReal(GVL.aReadStruct.HphPress);
	fbJsonWriter.AddKey('HphInpress');
	fbJsonWriter.AddReal(GVL.aReadStruct.HphInpress);
	fbJsonWriter.AddKey('HphInflow');
	fbJsonWriter.AddReal(GVL.aReadStruct.HphInflow);
	fbJsonWriter.AddKey('BoiTemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.BoiTemp);
	fbJsonWriter.AddKey('BoiPress');
	fbJsonWriter.AddReal(GVL.aReadStruct.BoiPress);
	fbJsonWriter.AddKey('ConTemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.ConTemp);
	fbJsonWriter.AddKey('ConInflow');
	fbJsonWriter.AddReal(GVL.aReadStruct.ConInflow);
	fbJsonWriter.AddKey('TurHtemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurHtemp);
	fbJsonWriter.AddKey('TurItemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurItemp);
	fbJsonWriter.AddKey('TurLtemp');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurLtemp);
	fbJsonWriter.AddKey('TurHpress');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurHpress);
	fbJsonWriter.AddKey('TurIpress');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurIpress);
	fbJsonWriter.AddKey('TurLpress');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurLpress);
	fbJsonWriter.AddKey('TurSpeed');
	fbJsonWriter.AddReal(GVL.aReadStruct.TurSpeed);
	fbJsonWriter.EndObject();
	
fbJsonWriter.AddKey('ComponentStatus');
	fbJsonWriter.StartObject();
	fbJsonWriter.AddKey('PconMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.PconMode);
	fbJsonWriter.AddKey('PconRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.PconRun);
	fbJsonWriter.AddKey('PconVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.PconVal);
	fbJsonWriter.AddKey('PconTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.PconTime);
	fbJsonWriter.AddKey('PconAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.PconAtime);
	fbJsonWriter.AddKey('PconFault');
	
	fbJsonWriter.AddBool(GVL.aReadStruct.PconFault);
	fbJsonWriter.AddKey('PsupMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.PsupMode);
	fbJsonWriter.AddKey('PsupRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.PsupRun);
	fbJsonWriter.AddKey('PsupVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.PsupVal);
	fbJsonWriter.AddKey('PsupTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.PsupTime);
	fbJsonWriter.AddKey('PsupAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.PsupAtime);
	fbJsonWriter.AddKey('PsupFault');
	fbJsonWriter.AddBool(GVL.aReadStruct.PsupFault);

	fbJsonWriter.AddKey('PcirMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.PcirMode);
	fbJsonWriter.AddKey('PcirRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.PcirRun);
	fbJsonWriter.AddKey('PcirVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.PcirVal);
	fbJsonWriter.AddKey('PcirTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.PcirTime);
	fbJsonWriter.AddKey('PcirAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.PcirAtime);
	fbJsonWriter.AddKey('PcirFault');
	fbJsonWriter.AddBool(GVL.aReadStruct.PcirFault);

	fbJsonWriter.AddKey('F1Mode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.F1Mode);
	fbJsonWriter.AddKey('F1Run');
	fbJsonWriter.AddBool(GVL.aReadStruct.F1Run);
	fbJsonWriter.AddKey('F1Val');
	fbJsonWriter.AddReal(GVL.aReadStruct.F1Val);
	fbJsonWriter.AddKey('F1Time');
	fbJsonWriter.AddDint(GVL.aReadStruct.F1Time);
	fbJsonWriter.AddKey('F1Atime');
	fbJsonWriter.AddDint(GVL.aReadStruct.F1Atime);
	fbJsonWriter.AddKey('F1Fault');
	fbJsonWriter.AddBool(GVL.aReadStruct.F1Fault);

	fbJsonWriter.AddKey('F2Mode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.F2Mode);
	fbJsonWriter.AddKey('F2Run');
	fbJsonWriter.AddBool(GVL.aReadStruct.F2Run);
	fbJsonWriter.AddKey('F2Val');
	fbJsonWriter.AddReal(GVL.aReadStruct.F2Val);
	fbJsonWriter.AddKey('F2Time');
	fbJsonWriter.AddDint(GVL.aReadStruct.F2Time);
	fbJsonWriter.AddKey('F2Atime');
	fbJsonWriter.AddDint(GVL.aReadStruct.F2Atime);
	fbJsonWriter.AddKey('F2Fault');
	fbJsonWriter.AddBool(GVL.aReadStruct.F2Fault);

	fbJsonWriter.AddKey('F3Mode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.F3Mode);
	fbJsonWriter.AddKey('F3Run');
	fbJsonWriter.AddBool(GVL.aReadStruct.F3Run);
	fbJsonWriter.AddKey('F3Val');
	fbJsonWriter.AddReal(GVL.aReadStruct.F3Val);
	fbJsonWriter.AddKey('F3Time');
	fbJsonWriter.AddDint(GVL.aReadStruct.F3Time);
	fbJsonWriter.AddKey('F3Atime');
	fbJsonWriter.AddDint(GVL.aReadStruct.F3Atime);
	fbJsonWriter.AddKey('F3Fault');
	fbJsonWriter.AddBool(GVL.aReadStruct.F3Fault);

	fbJsonWriter.AddKey('VlphMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.VlphMode);
	fbJsonWriter.AddKey('VlphRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.VlphRun);
	fbJsonWriter.AddKey('VlphVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.VlphVal);
	fbJsonWriter.AddKey('VlphTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VlphTime);
	fbJsonWriter.AddKey('VlphAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VlphAtime);
	fbJsonWriter.AddKey('VlphFault');
	fbJsonWriter.AddBool(GVL.aReadStruct.VlphFault);

	fbJsonWriter.AddKey('VdeaMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.VdeaMode);
	fbJsonWriter.AddKey('VdeaRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.VdeaRun);
	fbJsonWriter.AddKey('VdeaVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.VdeaVal);
	fbJsonWriter.AddKey('VdeaTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VdeaTime);
	fbJsonWriter.AddKey('VdeaAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VdeaAtime);
	fbJsonWriter.AddKey('VdeaFault');
	fbJsonWriter.AddBool(GVL.aReadStruct.VdeaFault);

	fbJsonWriter.AddKey('VhphMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.VhphMode);
	fbJsonWriter.AddKey('VhphRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.VhphRun);
	fbJsonWriter.AddKey('VhphVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.VhphVal);
	fbJsonWriter.AddKey('VhphTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VhphTime);
	fbJsonWriter.AddKey('VhphAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VhphAtime);
	fbJsonWriter.AddKey('VhphFault');
	fbJsonWriter.AddBool(GVL.aReadStruct.VhphFault);

	fbJsonWriter.AddKey('VturMode');
	fbJsonWriter.AddUdint(GVL.aReadStruct.VturMode);
	fbJsonWriter.AddKey('VturRun');
	fbJsonWriter.AddBool(GVL.aReadStruct.VturRun);
	fbJsonWriter.AddKey('VturVal');
	fbJsonWriter.AddReal(GVL.aReadStruct.VturVal);
	fbJsonWriter.AddKey('VturTime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VturTime);
	fbJsonWriter.AddKey('VturAtime');
	fbJsonWriter.AddDint(GVL.aReadStruct.VturAtime);
	fbJsonWriter.AddKey('VturFault');
	fbJsonWriter.AddBool(GVL.aReadStruct.VturFault);
	fbJsonWriter.EndObject();
fbJsonWriter.EndObject();
fbJsonWriter.CopyDocument(sPayloadPub, SIZEOF(sPayloadPub));
fbJsonWriter.ResetDocument();
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="PostMqtt">
      <LineId Id="39" Count="5" />
      <LineId Id="139" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="45" Count="17" />
      <LineId Id="65" Count="3" />
      <LineId Id="111" Count="1" />
      <LineId Id="110" Count="0" />
      <LineId Id="69" Count="1" />
      <LineId Id="108" Count="1" />
      <LineId Id="71" Count="0" />
      <LineId Id="73" Count="8" />
      <LineId Id="37" Count="1" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="PostMqtt.WriteJson">
      <LineId Id="5" Count="0" />
      <LineId Id="81" Count="1" />
      <LineId Id="80" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="85" Count="1" />
      <LineId Id="91" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="92" Count="6" />
      <LineId Id="114" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="101" Count="11" />
      <LineId Id="115" Count="103" />
      <LineId Id="21" Count="3" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>