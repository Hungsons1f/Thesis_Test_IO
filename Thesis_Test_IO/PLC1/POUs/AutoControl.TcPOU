<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="AutoControl" Id="{034eab86-42d1-4d45-93b4-eb66e60beb13}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM AutoControl
VAR
	{region 'Control Template'} 			//Struct to manipulate the auto mode 
	CondensePump_Press: aS_AutoControl;
	SupplyPump_Press: aS_AutoControl;
	Condenser_Temp: aS_AutoControl;
	LPHeater_Temp: aS_AutoControl;
	AirEjector_Temp: aS_AutoControl;
	HPHeater_Temp: aS_AutoControl;
	Turbine_Speed: aS_AutoControl;
	Boiler_Temp: aS_AutoControl;
	{endregion}
		 
	{region 'Component PID Controllers'}
	ForceFan1_PID: FB_BasicPID;
	ForceFan2_PID: FB_BasicPID;
	ForceFan3_PID: FB_BasicPID;
	CondensePump_Press_PID: FB_BasicPID;
	SupplyPump_Press_PID: FB_BasicPID;
	Condenser_Temp_PID: FB_BasicPID;
	LPHeater_Temp_PID: FB_BasicPID;
	AirEjector_Temp_PID: FB_BasicPID;
	HPHeater_Temp_PID: FB_BasicPID;
	Turbine_Speed_PID: FB_BasicPID;
	Boiler_Temp_PID: FB_BasicPID;

	ForceFan1_Trig: R_TRIG;
	ForceFan2_Trig: R_TRIG;
	ForceFan3_Trig: R_TRIG;
	CondensePump_Press_Trig: R_TRIG;
	SupplyPump_Press_Trig: R_TRIG;
	Condenser_Temp_Trig: R_TRIG;
	LPHeater_Temp_Trig: R_TRIG;
	AirEjector_Temp_Trig: R_TRIG;
	HPHeater_Temp_Trig: R_TRIG;
	Turbine_Speed_Trig: R_TRIG;
	Boiler_Temp_Trig: R_TRIG;	 
	
	setpoint: REAL := 0.266;
	setpoint2: REAL := 28;
	setpoint3: REAL := 167;
	setpoint4: REAL := 37.85; //200,12.5,0.3,0.05
	setpoint5: REAL := 141.3;
	setpoint6: REAL := 200;
	setpoint7: REAL := 295;
	setpoint8: REAL := 3000;
	setpoint9: REAL := 566;
	{endregion}
		 
	{region 'Process State Vars'}
	ProcessState: aE_ProcessState := aE_ProcessState.Init;
	StartState: BYTE;
		 
	flag1: BOOL;
	flag2: BOOL;
	flag3: BOOL;
		 
	fbTon: TON;
	{endregion}
		 
	
	{region 'Control Commands'}
	ProcessStart: BOOL;
	ProcessStop: BOOL;
	ProcessEmergency: BOOL;
	ProcessReset: BOOL;
	{endregion}
	i: INT;
	fbttemp: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Chú ý lỗi ở việc reset bộ pid

{region 'Control signal'}
ProcessStart := Interfacex.ScadaInterface.AutoCtrlCmds.Start;
ProcessStop := Interfacex.ScadaInterface.AutoCtrlCmds.Stop;
ProcessEmergency := Interfacex.ScadaInterface.AutoCtrlCmds.Emergency;
ProcessReset := Interfacex.ScadaInterface.AutoCtrlCmds.Reset;
{endregion}


{region 'Main State Machine'}
CASE ProcessState OF
	aE_ProcessState.Init:
		//Reset all components and all PID Controllers
		Reset_StopAllComponents();
		ResetAllPidControllers();

		//Reset all flags and timers
		flag1 := FALSE;
		flag2 := FALSE;
		flag3 := FALSE;
		StartState := 0;
		fbTon(IN := FALSE);
		//Check if all conditions is matched
		//Next state
		IF ProcessEmergency THEN
			ProcessState := aE_ProcessState.Error;
		END_IF
		IF ProcessStart THEN
			ProcessState := aE_ProcessState.Enable;
		END_IF
		
	aE_ProcessState.Enable:
		//Start all components and unlock all Pid controllers
		StartAllComponents();
		UnlockAllPidControllers();
		
		//Next state
		IF ProcessEmergency THEN
			ProcessState := aE_ProcessState.Error;
		END_IF
		fbttemp(IN:= TRUE, PT:=T#3S);
		IF fbttemp.Q THEN
			ProcessState := aE_ProcessState.Start;
			fbttemp(IN:= FALSE);
		END_IF
		
	aE_ProcessState.Start:
		fbttemp(IN:= TRUE, PT:=T#3S);
		IF fbttemp.Q THEN
			ProcessState := aE_ProcessState.SteadyState;
			fbttemp(IN:= FALSE);
		END_IF
		IF ProcessEmergency THEN
			ProcessState := aE_ProcessState.Error;
		END_IF
	{region 'aa'}
//		CASE StartState OF 
//			0:  //Start state 0: increase condense pump pressure to 5 bar, supply pump pressure to 30 bar
//				//Assign setpoint
//				CondensePump_Press.Setpoint := 5;		//5 bar, pid control
//				SupplyPump_Press.Setpoint := 30;		//10 bar, pid control
//				Condenser_Temp.Setpoint := 37.85;		//37.85 oC, pid control
//				LPHeater_Temp.Setpoint := 100;			//100% valve openpercent, switch = direct control
//				AirEjector_Temp.Setpoint := 100;		//100% valve openpercent, switch = direct control
//				HPHeater_Temp.Setpoint := 100;			//100% valve openpercent, switch = direct control
//				Turbine_Speed.Setpoint := 100;			//100% valve openpercent, switch = direct control
//				Boiler_Temp.Setpoint := 37.85;			//37.85 oC, pid control		
				
//				//Switch controller
//				LPHeater_Temp.Switch := 0;
//				AirEjector_Temp.Switch := 0;
//				HPHeater_Temp.Switch := 0;
//				Turbine_Speed.Switch := 0;
				
//				//Check condition to change state
//				IF Streams.InStream.CondensePump_Press >= 5 THEN
//					flag1 := TRUE;
//				END_IF
//				IF Streams.InStream.SupplyPump_Press >= 10 THEN
//					flag2 := TRUE;
//				END_IF
//				IF flag1 = TRUE AND flag2 = TRUE THEN
//					fbTon(IN := TRUE, PT:= T#5S);
//					IF fbTon.Q THEN
//						StartState := 1;
//						flag1 := FALSE; flag2:= FALSE; 
//						fbTon(IN := FALSE);
//					END_IF
//				END_IF
				
//			1:  //Start state 1: increase boiler temp to 350 oC
//				//Assign setpoint
//				CondensePump_Press.Setpoint := 5;		//5 bar, pid control
//				SupplyPump_Press.Setpoint := 30;		//10 bar, pid control
//				Condenser_Temp.Setpoint := 37.85;		//37.85 oC, pid control
//				LPHeater_Temp.Setpoint := 100;			//100% valve openpercent, switch = direct control
//				AirEjector_Temp.Setpoint := 100;		//100% valve openpercent, switch = direct control
//				HPHeater_Temp.Setpoint := 295;			//100% valve openpercent, switch = direct control
//				Turbine_Speed.Setpoint := 3000;			//100% valve openpercent, switch = direct control
//				Boiler_Temp.Setpoint := 350;			//37.85 oC, pid control		
				
//				//Switch controller
//				LPHeater_Temp.Switch := 0;
//				AirEjector_Temp.Switch := 0;
//				HPHeater_Temp.Switch := 1;
//				Turbine_Speed.Switch := 1;
				
//				//Check condition to change state
//				IF Streams.InStream.Boiler_Temp >= 350 THEN
//					flag1 := TRUE;
//				END_IF
//				IF flag1 = TRUE THEN
//					fbTon(IN := TRUE, PT:= T#8S);
//					IF fbTon.Q THEN
//						StartState := 2;
//						flag1 := FALSE; 
//						fbTon(IN := FALSE);
//					END_IF
//				END_IF
				
//			2:  //Start state 2: increase condense pump pressure to 15 bar, supply pump pressure to 100 bar
//				//Assign setpoint
//				CondensePump_Press.Setpoint := 15;		//15 bar, pid control
//				SupplyPump_Press.Setpoint := 100;		//100 bar, pid control
//				Condenser_Temp.Setpoint := 37.85;		//37.85 oC, pid control
//				LPHeater_Temp.Setpoint := 100;			//100% valve openpercent, switch = direct control
//				AirEjector_Temp.Setpoint := 100;		//100% valve openpercent, switch = direct control
//				HPHeater_Temp.Setpoint := 295;			//100% valve openpercent, switch = direct control
//				Turbine_Speed.Setpoint := 3000;			//100% valve openpercent, switch = direct control
//				Boiler_Temp.Setpoint := 350;			//350 oC, pid control		
				
//				//Switch controller
//				LPHeater_Temp.Switch := 0;
//				AirEjector_Temp.Switch := 0;
//				HPHeater_Temp.Switch := 1;
//				Turbine_Speed.Switch := 1;
				
//				//Check condition to change state
//				IF Streams.InStream.CondensePump_Press >= 15 THEN
//					flag1 := TRUE;
//				END_IF
//				IF Streams.InStream.SupplyPump_Press >= 100 THEN
//					flag2 := TRUE;
//				END_IF
//				IF flag1 = TRUE AND flag2 = TRUE THEN
//					fbTon(IN := TRUE, PT:= T#10S);
//					IF fbTon.Q THEN
//						StartState := 3;
//						flag1 := FALSE; flag2 := FALSE; 
//						fbTon(IN := FALSE);
//					END_IF
//				END_IF		
//			3:  //Start state 3: increase boiler temp to 450 oC
//				//Assign setpoint
//				CondensePump_Press.Setpoint := 15;		//5 bar, pid control
//				SupplyPump_Press.Setpoint := 100;		//10 bar, pid control
//				Condenser_Temp.Setpoint := 37.85;		//37.85 oC, pid control
//				LPHeater_Temp.Setpoint := 141.3;		//100% valve openpercent, switch = direct control
//				AirEjector_Temp.Setpoint := 200;		//100% valve openpercent, switch = direct control
//				HPHeater_Temp.Setpoint := 295;			//100% valve openpercent, switch = direct control
//				Turbine_Speed.Setpoint := 3000;			//100% valve openpercent, switch = direct control
//				Boiler_Temp.Setpoint := 450;			//37.85 oC, pid control		
				
//				//Switch controller
//				LPHeater_Temp.Switch := 1;
//				AirEjector_Temp.Switch := 1;
//				HPHeater_Temp.Switch := 1;
//				Turbine_Speed.Switch := 1;
				
//				//Check condition to change state
//				IF Streams.InStream.Boiler_Temp >= 450 THEN
//					flag1 := TRUE;
//				END_IF
//				IF flag1 = TRUE THEN
//					fbTon(IN := TRUE, PT:= T#10S);
//					IF fbTon.Q THEN
//						StartState := 4;
//						flag1 := FALSE; 
//						fbTon(IN := FALSE);
//					END_IF
//				END_IF
//			4:  //Start state 4: increase condense pump pressure to 28 bar, supply pump pressure to 167 bar
//				//Assign setpoint
//				CondensePump_Press.Setpoint := 28;		//15 bar, pid control
//				SupplyPump_Press.Setpoint := 167;		//100 bar, pid control
//				Condenser_Temp.Setpoint := 37.85;		//37.85 oC, pid control
//				LPHeater_Temp.Setpoint := 141.3;			//100% valve openpercent, switch = direct control
//				AirEjector_Temp.Setpoint := 200;		//100% valve openpercent, switch = direct control
//				HPHeater_Temp.Setpoint := 295;			//100% valve openpercent, switch = direct control
//				Turbine_Speed.Setpoint := 3000;			//100% valve openpercent, switch = direct control
//				Boiler_Temp.Setpoint := 450;			//350 oC, pid control		
				
//				//Switch controller
//				LPHeater_Temp.Switch := 1;
//				AirEjector_Temp.Switch := 1;
//				HPHeater_Temp.Switch := 1;
//				Turbine_Speed.Switch := 1;
				
//				//Check condition to change state
//				IF Streams.InStream.CondensePump_Press >= 28 THEN
//					flag1 := TRUE;
//				END_IF
//				IF Streams.InStream.SupplyPump_Press >= 167 THEN
//					flag2 := TRUE;
//				END_IF
//				IF flag1 = TRUE AND flag2 = TRUE THEN
//					fbTon(IN := TRUE, PT:= T#10S);
//					IF fbTon.Q THEN
//						StartState := 5;
//						flag1 := FALSE; flag2 := FALSE;
//						fbTon(IN := FALSE);
//					END_IF
//				END_IF				
//			5:  //Start state 5: increase boiler temp to 566 oC
//				//Assign setpoint
//				CondensePump_Press.Setpoint := 28;		//15 bar, pid control
//				SupplyPump_Press.Setpoint := 167;		//100 bar, pid control
//				Condenser_Temp.Setpoint := 37.85;		//37.85 oC, pid control
//				LPHeater_Temp.Setpoint := 141.3;			//100% valve openpercent, switch = direct control
//				AirEjector_Temp.Setpoint := 200;		//100% valve openpercent, switch = direct control
//				HPHeater_Temp.Setpoint := 295;			//100% valve openpercent, switch = direct control
//				Turbine_Speed.Setpoint := 3000;			//100% valve openpercent, switch = direct control
//				Boiler_Temp.Setpoint := 566;			//350 oC, pid control		
				
//				//Switch controller
//				LPHeater_Temp.Switch := 1;
//				AirEjector_Temp.Switch := 1;
//				HPHeater_Temp.Switch := 1;
//				Turbine_Speed.Switch := 1;
				
//				//Check condition to change state
//				IF Streams.InStream.CondensePump_Press >= 566 THEN
//					flag1 := TRUE;
//				END_IF
//				IF flag1 = TRUE THEN
//					fbTon(IN := TRUE, PT:= T#10S);
//					IF fbTon.Q THEN
//						StartState := 0;
//						//Next state
//						ProcessState := aE_ProcessState.SteadyState;
//						flag1 := FALSE; 
//						fbTon(IN := FALSE);
//					END_IF
//				END_IF				
//		END_CASE
		 
		 {endregion}
		  
		
	
	aE_ProcessState.SteadyState:
		//Next State
		IF ProcessEmergency THEN
			ProcessState := aE_ProcessState.Error;
		END_IF
		IF ProcessStop THEN
			ProcessState := aE_ProcessState.Stop;
		END_IF
		
	aE_ProcessState.Stop:
		//Reset processstop
		//ProcessStop := FALSE;

		//Next State
		IF ProcessEmergency THEN
			ProcessState := aE_ProcessState.Error;
		END_IF
		fbttemp(IN:= TRUE, PT:=T#3S);
		IF fbttemp.Q THEN
			ProcessState := aE_ProcessState.Disable;
			fbttemp(IN:= FALSE);
		END_IF
		//ProcessState := aE_ProcessState.Disable;
		
	aE_ProcessState.Disable:
		//Stop all components and lock all Pid Controllers, Clear all start flags of components
		StopAllComponents();
		LockAllPidControllers();
		Reset_StartAllComponents();
		
		//Next State
		IF ProcessEmergency THEN
			ProcessState := aE_ProcessState.Error;
		END_IF
		fbttemp(IN:= TRUE, PT:=T#3S);
		IF fbttemp.Q THEN
			ProcessState := aE_ProcessState.Init;
			fbttemp(IN:= FALSE);
		END_IF
		//ProcessState := aE_ProcessState.Init;
		
	aE_ProcessState.Error:
	 	//Stop all components and clear start flags
		StopAllComponents();
		LockAllPidControllers();
		Reset_StartAllComponents();
		
		//Next State	 
		IF ProcessReset THEN
			ProcessState := aE_ProcessState.Reset;
		END_IF
		
	aE_ProcessState.Reset:
		//Next State
		ProcessState := aE_ProcessState.Init;
END_CASE
{endregion}

{region 'Component Controllers'}
//IF (ProcessState = aE_ProcessState.Start OR ProcessState = aE_ProcessState.SteadyState OR ProcessState = aE_ProcessState.Stop) THEN 
	CondensePump_Press_PID(fSetpointValue := CondensePump_Press.Setpoint,
							fActualValue := Streams.InStream.CondensePump_Press,
							bReset := NOT PnID.CondensePump.Cmd OR CondensePump_Press.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_CondensePump_Press.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_CondensePump_Press.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_CondensePump_Press.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_CondensePump_Press.Tn,
							fCtrlOutput => CondensePump_Press.ControlSignal);
								 
	SupplyPump_Press_PID(fSetpointValue := SupplyPump_Press.Setpoint,
							fActualValue := Streams.InStream.SupplyPump_Press,
							bReset := NOT PnID.SupplyPump.Cmd OR SupplyPump_Press.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_SupplyPump_Press.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_SupplyPump_Press.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_SupplyPump_Press.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_SupplyPump_Press.Tn,
							fCtrlOutput => SupplyPump_Press.ControlSignal);	
		  
	Condenser_Temp_PID(fSetpointValue := Condenser_Temp.Setpoint,
							fActualValue := Streams.InStream.Condenser_Temp,
							bReset := NOT PnID.CircularPump.Cmd OR Condenser_Temp.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_Condenser_Temp.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_Condenser_Temp.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_Condenser_Temp.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_Condenser_Temp.Tn,
							fCtrlOutput => Condenser_Temp.ControlSignal);
								 
	CASE LPHeater_Temp.Switch OF 
		 0: 
			  LPHeater_Temp.ControlSignal := LPHeater_Temp.Setpoint;
		 1: 
			  LPHeater_Temp_PID(fSetpointValue := LPHeater_Temp.Setpoint,
						fActualValue := Streams.InStream.LPHeater_Temp,
						bReset := NOT PnID.LPHeaterValve.Cmd OR LPHeater_Temp.ResetPid,
						fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
						fKp := Interfacex.ScadaInterface.Parameters.PID_LPHeater_Temp.Kp,
						fTn := Interfacex.ScadaInterface.Parameters.PID_LPHeater_Temp.Ti,
						fTv := Interfacex.ScadaInterface.Parameters.PID_LPHeater_Temp.Td,
						fTd := Interfacex.ScadaInterface.Parameters.PID_LPHeater_Temp.Tn,
						fCtrlOutput => LPHeater_Temp.ControlSignal);
	END_CASE
	
	CASE AirEjector_Temp.Switch OF
		0:
			 AirEjector_Temp.ControlSignal := AirEjector_Temp.Setpoint;
		1: 
			 AirEjector_Temp_PID(fSetpointValue := AirEjector_Temp.Setpoint,
							fActualValue := Streams.InStream.AirEjector_Temp,
							bReset := NOT PnID.AirEjectorValve.Cmd OR AirEjector_Temp.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_AirEjector_Temp.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_AirEjector_Temp.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_AirEjector_Temp.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_AirEjector_Temp.Tn,
							fCtrlOutput => AirEjector_Temp.ControlSignal);
	END_CASE							 
				
	CASE HPHeater_Temp.Switch OF
		0: 
			 HPHeater_Temp.ControlSignal := HPHeater_Temp.Setpoint;
		1: 
			 HPHeater_Temp_PID(fSetpointValue := HPHeater_Temp.Setpoint,
							fActualValue := Streams.InStream.HPHeater_Temp,
							bReset := NOT PnID.HPHeaterValve.Cmd OR HPHeater_Temp.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_HPHeater_Temp.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_HPHeater_Temp.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_HPHeater_Temp.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_HPHeater_Temp.Tn,
							fCtrlOutput => HPHeater_Temp.ControlSignal);
	END_CASE				 
	
	CASE Turbine_Speed.Switch OF
		0:
			 Turbine_Speed.ControlSignal := Turbine_Speed.Setpoint;
		1: 
			 Turbine_Speed_PID(fSetpointValue := Turbine_Speed.Setpoint,
							fActualValue := Streams.InStream.Turbine_Rotation,
							bReset := NOT PnID.TurbineValve.Cmd OR Turbine_Speed.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_Turbine_Speed.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_Turbine_Speed.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_Turbine_Speed.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_Turbine_Speed.Tn,
							fCtrlOutput => Turbine_Speed.ControlSignal);
	END_CASE
	
	Boiler_Temp_PID(fSetpointValue := Boiler_Temp.Setpoint,
							fActualValue := Streams.InStream.Boiler_Temp,
							bReset := NOT (PnID.ForceFan1.Cmd AND PnID.ForceFan2.Cmd AND PnID.ForceFan3.Cmd) OR Boiler_Temp.ResetPid,
							fCtrlCycleTime := Interfacex.ScadaInterface.Parameters.SampleTime,
							fKp := Interfacex.ScadaInterface.Parameters.PID_Boiler_Temp.Kp,
							fTn := Interfacex.ScadaInterface.Parameters.PID_Boiler_Temp.Ti,
							fTv := Interfacex.ScadaInterface.Parameters.PID_Boiler_Temp.Td,
							fTd := Interfacex.ScadaInterface.Parameters.PID_Boiler_Temp.Tn,
							fCtrlOutput => Boiler_Temp.ControlSignal);
							 
//END_IF
//Catch trigger of manual to automatic
CondensePump_Press_Trig(CLK := (PnID.CondensePump.Mode = aE_Mode.Auto));
SupplyPump_Press_Trig(CLK := (PnID.SupplyPump.Mode = aE_Mode.Auto));
Condenser_Temp_Trig(CLK := (PnID.CircularPump.Mode = aE_Mode.Auto));
LPHeater_Temp_Trig(CLK := (PnID.LPHeaterValve.Mode = aE_Mode.Auto));
AirEjector_Temp_Trig(CLK := (PnID.AirEjectorValve.Mode = aE_Mode.Auto));
HPHeater_Temp_Trig(CLK := (PnID.HPHeaterValve.Mode = aE_Mode.Auto));
Turbine_Speed_Trig(CLK := (PnID.TurbineValve.Mode = aE_Mode.Auto));
Boiler_Temp_Trig(CLK := (PnID.ForceFan1.Mode = aE_Mode.Auto));

IF PnID.CondensePump.Mode = aE_Mode.Manual THEN
	CondensePump_Press.ResetPid := TRUE;
END_IF
IF PnID.SupplyPump.Mode = aE_Mode.Manual THEN
	SupplyPump_Press.ResetPid := TRUE;
END_IF
IF PnID.CircularPump.Mode = aE_Mode.Manual THEN
	Condenser_Temp.ResetPid := TRUE;
END_IF
IF PnID.LPHeaterValve.Mode = aE_Mode.Manual THEN
	LPHeater_Temp.ResetPid := TRUE;
END_IF
IF PnID.AirEjectorValve.Mode = aE_Mode.Manual THEN
	AirEjector_Temp.ResetPid := TRUE;
END_IF
IF PnID.HPHeaterValve.Mode = aE_Mode.Manual THEN
	HPHeater_Temp.ResetPid := TRUE;
END_IF
IF PnID.TurbineValve.Mode = aE_Mode.Manual THEN
	Turbine_Speed.ResetPid := TRUE;
END_IF
IF PnID.ForceFan1.Mode = aE_Mode.Manual THEN
	Boiler_Temp.ResetPid := TRUE;
END_IF

IF CondensePump_Press_Trig.Q THEN
	CondensePump_Press.ResetPid := FALSE;
END_IF
IF SupplyPump_Press_Trig.Q THEN
	SupplyPump_Press.ResetPid := FALSE;
END_IF
IF Condenser_Temp_Trig.Q THEN
	Condenser_Temp.ResetPid := FALSE;
END_IF
IF LPHeater_Temp_Trig.Q THEN
	LPHeater_Temp.ResetPid := FALSE;
END_IF
IF AirEjector_Temp_Trig.Q THEN
	AirEjector_Temp.ResetPid := FALSE;
END_IF
IF HPHeater_Temp_Trig.Q THEN
	HPHeater_Temp.ResetPid := FALSE;
END_IF
IF Turbine_Speed_Trig.Q THEN
	Turbine_Speed.ResetPid := FALSE;
END_IF
IF Boiler_Temp_Trig.Q THEN
	Boiler_Temp.ResetPid := FALSE;
END_IF
{endregion}
]]></ST>
    </Implementation>
    <Action Name="LockAllPidControllers" Id="{f361dba3-b7eb-4ddb-a81a-34ed9f6f4613}">
      <Implementation>
        <ST><![CDATA[CondensePump_Press.ResetPid := TRUE;
SupplyPump_Press.ResetPid := TRUE;
Condenser_Temp.ResetPid := TRUE;
LPHeater_Temp.ResetPid := TRUE;
AirEjector_Temp.ResetPid := TRUE;
HPHeater_Temp.ResetPid := TRUE;
Turbine_Speed.ResetPid := TRUE;
Boiler_Temp.ResetPid := TRUE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="Reset_StartAllComponents" Id="{c4298bc5-fde3-4220-980a-0f215b7a2bc1}">
      <Implementation>
        <ST><![CDATA[//Clear all start flags of components
CondensePump_Press.Start := FALSE;
SupplyPump_Press.Start := FALSE;
Condenser_Temp.Start := FALSE;
LPHeater_Temp.Start := FALSE;
AirEjector_Temp.Start := FALSE;
HPHeater_Temp.Start := FALSE;
Turbine_Speed.Start := FALSE;
Boiler_Temp.Start := FALSE;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Reset_StopAllComponents" Id="{3a744524-85d4-4ae0-8111-cba1fb2fa1f4}">
      <Implementation>
        <ST><![CDATA[//Reset all components
CondensePump_Press.Stop := FALSE;
SupplyPump_Press.Stop := FALSE;
Condenser_Temp.Stop := FALSE;
LPHeater_Temp.Stop := FALSE;
AirEjector_Temp.Stop := FALSE;
HPHeater_Temp.Stop := FALSE;
Turbine_Speed.Stop := FALSE;
Boiler_Temp.Stop := FALSE;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ResetAllPidControllers" Id="{8216e1bb-67b8-4edd-afc5-f26fa58226e2}">
      <Implementation>
        <ST><![CDATA[//Reset all PID Controllers
CondensePump_Press_PID(bReset := TRUE);
SupplyPump_Press_PID(bReset := TRUE);
Condenser_Temp_PID(bReset := TRUE);
LPHeater_Temp_PID(bReset := TRUE);
AirEjector_Temp_PID(bReset := TRUE);
HPHeater_Temp_PID(bReset := TRUE);
Turbine_Speed_PID(bReset := TRUE);
Boiler_Temp_PID(bReset := TRUE);
]]></ST>
      </Implementation>
    </Action>
    <Action Name="StartAllComponents" Id="{00eae09a-8071-44ad-a07d-1143aaacf4bd}">
      <Implementation>
        <ST><![CDATA[//Start all components
CondensePump_Press.Start := TRUE;
SupplyPump_Press.Start := TRUE;
Condenser_Temp.Start := TRUE;
LPHeater_Temp.Start := TRUE;
AirEjector_Temp.Start := TRUE;
HPHeater_Temp.Start := TRUE;
Turbine_Speed.Start := TRUE;
Boiler_Temp.Start := TRUE;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="StopAllComponents" Id="{a1f5f4a1-b053-4804-a3d0-2750b8d79bb5}">
      <Implementation>
        <ST><![CDATA[//Stop all components
CondensePump_Press.Stop := TRUE;
SupplyPump_Press.Stop := TRUE;
Condenser_Temp.Stop := TRUE;
LPHeater_Temp.Stop := TRUE;
AirEjector_Temp.Stop := TRUE;
HPHeater_Temp.Stop := TRUE;
Turbine_Speed.Stop := TRUE;
Boiler_Temp.Stop := TRUE;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="UnlockAllPidControllers" Id="{147ad17e-894f-44f5-af06-707350d6be91}">
      <Implementation>
        <ST><![CDATA[CondensePump_Press.ResetPid := FALSE;
SupplyPump_Press.ResetPid := FALSE;
Condenser_Temp.ResetPid := FALSE;
LPHeater_Temp.ResetPid := FALSE;
AirEjector_Temp.ResetPid := FALSE;
HPHeater_Temp.ResetPid := FALSE;
Turbine_Speed.ResetPid := FALSE;
Boiler_Temp.ResetPid := FALSE;]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="AutoControl">
      <LineId Id="1571" Count="471" />
      <LineId Id="132" Count="0" />
    </LineIds>
    <LineIds Name="AutoControl.LockAllPidControllers">
      <LineId Id="1" Count="7" />
    </LineIds>
    <LineIds Name="AutoControl.Reset_StartAllComponents">
      <LineId Id="2" Count="8" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="AutoControl.Reset_StopAllComponents">
      <LineId Id="2" Count="8" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="AutoControl.ResetAllPidControllers">
      <LineId Id="2" Count="8" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="AutoControl.StartAllComponents">
      <LineId Id="2" Count="8" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="AutoControl.StopAllComponents">
      <LineId Id="2" Count="8" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="AutoControl.UnlockAllPidControllers">
      <LineId Id="2" Count="6" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>